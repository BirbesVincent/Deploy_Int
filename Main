# Définir le nom de l'ordinateur distant
$computerName = "NomDeLOrdinateurDistant"

# Vérifier si l'utilisateur actuel a les privilèges administratifs sur l'ordinateur distant
if (-not (Test-Connection $computerName -Quiet)) {
    Write-Warning "Impossible de contacter l'ordinateur distant."
    exit
}
if (-not ([Security.Principal.WindowsPrincipal][Security.Principal.WindowsIdentity]::GetCurrent($computerName)).IsInRole([Security.Principal.WindowsBuiltInRole]::Administrator)) {
    Write-Warning "Vous devez exécuter ce script en tant qu'administrateur sur l'ordinateur distant."
    exit
}

# Définir le chemin d'accès à la clé de registre sur l'ordinateur distant
$regPath = "HKLM:\SOFTWARE\Policies\Google\Update"
$reg = [Microsoft.Win32.RegistryKey]::OpenRemoteBaseKey([Microsoft.Win32.RegistryHive]::LocalMachine, $computerName)
$key = $reg.OpenSubKey("SOFTWARE\Policies\Google\Update")

# Récupérer la valeur de la clé de registre
$value = $key.GetValue("UpdateDefault")

# Afficher la valeur de la clé de registre
Write-Host "La valeur de la clé UpdateDefault est : $value"

























# Chargement du module Windows Forms
Add-Type -AssemblyName System.Windows.Forms

# Création d'une nouvelle fenêtre
$form = New-Object System.Windows.Forms.Form
$form.Text = "Installation et désinstallation de VLC"
$form.ClientSize = New-Object System.Drawing.Size(400, 300)

# Chargement de l'image à utiliser comme arrière-plan
$imagePath = "C:\Users\Mist\Desktop\bg.jpg"
$image = [System.Drawing.Image]::FromFile($imagePath)

# Utilisation de l'image comme arrière-plan de la fenêtre
$form.BackgroundImage = $image
$form.BackgroundImageLayout = "Stretch" # étirement de l'image pour couvrir tout l'espace

# Création d'un bouton pour l'installation de VLC
$installButton = New-Object System.Windows.Forms.Button
$installButton.Text = "Installer VLC"
$installButton.Location = New-Object System.Drawing.Point(10, 10)
$installButton.add_Click({
    # URL de téléchargement de VLC
    $url = "https://get.videolan.org/vlc/3.0.16/win64/vlc-3.0.16-win64.exe"
    
    # Emplacement de téléchargement du fichier d'installation
    $path = "$env:USERPROFILE\Downloads\vlc-3.0.16-win64.exe"
    
    # Téléchargement du fichier d'installation
    (New-Object System.Net.WebClient).DownloadFile($url, $path)
    
    # Installation de VLC en utilisant le fichier téléchargé
    Start-Process $path -ArgumentList "/S" -Wait
    
    # Suppression du fichier d'installation
    Remove-Item $path
})

# Création d'un bouton pour la désinstallation de VLC
$uninstallButton = New-Object System.Windows.Forms.Button
$uninstallButton.Text = "Désinstaller VLC"
$uninstallButton.Location = New-Object System.Drawing.Point(10, 50)
$uninstallButton.add_Click({
    # Emplacement du programme d'installation de VLC
    $uninstallPath = "C:\Program Files\VideoLAN\VLC\uninstall.exe"
    
    # Désinstallation de VLC
    Start-Process $uninstallPath -ArgumentList "/S" -Wait
})

# Ajout des boutons à la fenêtre
$form.Controls.Add($installButton)
$form.Controls.Add($uninstallButton)

# Affichage de la fenêtre
$form.ShowDialog()







//
# Ajout d'une barre de progression
$progressBar = New-Object System.Windows.Forms.ProgressBar
$progressBar.Location = New-Object System.Drawing.Point(50, 100)
$progressBar.Size = New-Object System.Drawing.Size(300, 20)
$form.Controls.Add($progressBar)

# Fonction pour installer VLC
function InstallVLC {
    # Simuler l'installation en mettant à jour la barre de progression
    for ($i = 0; $i -le 100; $i += 10) {
        Start-Sleep -Milliseconds 500 # attente de 500 millisecondes
        $progressBar.Value = $i
    }
    # Installation terminée
    [System.Windows.Forms.MessageBox]::Show("VLC a été installé avec succès !")
}














$computerName = "Computer Name"
$softwareName = "VLC media player"

# Vérifier si le logiciel est déjà installé
$software = Get-WmiObject -Class Win32_Product -ComputerName $computerName | Where-Object { $_.Name -eq $softwareName }
if ($software) {
    Write-Host "$softwareName est déjà installé sur $computerName."
}
else {
    # Télécharger le fichier d'installation
    $sourcePath = "\\serveur\chemin\vers\VLC.exe"
    $destinationPath = "\\$computerName\c$\temp\VLC.exe"
    Copy-Item -Path $sourcePath -Destination $destinationPath -Force

    # Installer le logiciel
    Start-Process -FilePath $destinationPath -ArgumentList "/S" -Wait

    # Vérifier la version installée et mettre à jour si nécessaire
    $installedVersion = (Get-ItemProperty HKLM:\Software\VideoLAN\VLC -Name DisplayVersion).DisplayVersion
    $latestVersion = Invoke-WebRequest "https://get.videolan.org/vlc/last/win64/" -UseBasicParsing | Select-String -Pattern 'href="(.+?)".+?VLC media player' | ForEach-Object { $_.Matches.Groups[1].Value }
    $latestVersion = ($latestVersion -split '/' | Select-Object -Last 1) -replace '_win64.exe$'

    if ($installedVersion -lt $latestVersion) {
        Write-Host "Une nouvelle version de $softwareName est disponible."
        Write-Host "Version installée : $installedVersion"
        Write-Host "Dernière version disponible : $latestVersion"

        # Télécharger le fichier d'installation de la dernière version
        $sourcePath = "https://get.videolan.org/vlc/$latestVersion/win64/vlc-$latestVersion-win64.exe"
        $destinationPath = "\\$computerName\c$\temp\vlc-$latestVersion-win64.exe"
        Invoke-WebRequest $sourcePath -OutFile $destinationPath

        # Mettre à jour le logiciel
        Start-Process -FilePath $destinationPath -ArgumentList "/S" -Wait
    }
    else {
        Write-Host "$softwareName est déjà à jour sur $computerName."
    }
}
